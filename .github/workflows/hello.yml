name: CI ‚ûú Deploy Node22 to Target

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: [ self-hosted, Linux, X64 ]

    steps:
      - uses: actions/checkout@v4

      # Ensure Node 22 
      - uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      # 3) Install dependencies & run unit tests
      - run: |
          npm install
          node --test
        working-directory: ${{ github.workspace }}

      # 4) Package index.js + node_modules into a tarball
      - run: |
          tar czf myapp.tar.gz index.js node_modules/
        working-directory: ${{ github.workspace }}

      # 5) Copy the tarball to target:~/deploy/
      - uses: appleboy/scp-action@v1
        with:
          host:     ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_USER }}
          key:      ${{ secrets.TARGET_SSH_KEY }}
          port:     22
          source:   "myapp.tar.gz"
          target:   "~/deploy/"

      # 6) SSH into target, unpack, move into /opt/myapp, restart systemd
      - uses: appleboy/ssh-action@v1
        with:
          host:     ${{ secrets.TARGET_HOST }}
          username: ${{ secrets.TARGET_USER }}
          key:      ${{ secrets.TARGET_SSH_KEY }}
          port:     22
          script: |
            set -eux
            mkdir -p ~/deploy
            cd ~/deploy
            tar xzf myapp.tar.gz
            rm myapp.tar.gz

            sudo mkdir -p /opt/myapp
            sudo rm -rf /opt/myapp/*
            sudo mv ~/deploy/* /opt/myapp/
            sudo chown -R ${{ secrets.TARGET_USER }}: /opt/myapp
            echo "üòÅ"

            sudo tee /etc/systemd/system/myapp.service << 'EOF'
            [Unit]
            Description=My Node22 App
            After=network.target

            [Service]
            Type=simple
            User=${{ secrets.TARGET_USER }}
            WorkingDirectory=/opt/myapp
            ExecStart=/usr/bin/node /opt/myapp/index.js
            Restart=always
            Environment=NODE_ENV=production

            [Install]
            WantedBy=multi-user.target
            EOF

            sudo systemctl daemon-reload
            sudo systemctl enable myapp.service
            sudo systemctl restart myapp.service
